---
- block:

  - include_tasks: 'repo-{{ ansible_os_family }}.yml'

  - name: install ambari-server
    package:
      name: ambari-server
      state: latest
    notify: restart ambari-server
    tags:
      - ambari_server_install_ambari_server

  - name: install MySQL/MariaDB JDBC driver
    get_url:
      url: "{{ ambari_server_mysql_client_jar_url }}/{{ ambari_server_mysql_client_jar_file }}"
      dest: /usr/share/java/{{ ambari_server_mysql_client_jar_file }}"
      owner: root
      group: root
      mode: '0644'
    tags:
      - ambari_server_install_mysql_jdbc

  - name: fix config file permissions
    file:
      path: '{{ item }}'
      owner: '{{ ambari_server_user }}'
      group: '{{ ambari_server_group }}'
      mode: '0644'
    with_fileglob:
      - /etc/ambari-server/conf/*.conf
      - /etc/ambari-server/conf/*.properties
    tags:
      - ambari_server_fix_config_perms

  - name: create log path
    file:
      state: directory
      path: '{{ ambari_server_log_dir }}'
      owner: '{{ ambari_server_user }}'
      group: '{{ ambari_server_group }}'
      mode: '0755'
    tags:
      - ambari_server_create_log_path

  - name: update configs
    lineinfile:
      dest: '/etc/ambari-server/conf/{{ item.f }}'
      regexp: '{{ item.re }}'
      line: '{{ item.l }}'
    notify: restart ambari-server
    with_items:
      - f: ambari.properties
        re: '^server.jdbc.driver.path=.*'
        l: 'server.jdbc.driver.path=/usr/share/java/{{ ambari_server_mysql_client_jar_file }}'
      - f: log4j.properties
        re: '^ambari.log.dir=.*'
        l: 'ambari.log.dir=${ambari.root.dir}{{ ambari_server_log_dir }}'
    tags:
      - ambari_server_update_config

  - name: start and enable ambari-server
    service:
      name: ambari-server
      state: started
      enabled: yes
    when:
      - not ambari_server_dockerize
    tags:
      - ambari_server_start_service
      - ambari_server_enable_service

  tags:
    - ambari_server
